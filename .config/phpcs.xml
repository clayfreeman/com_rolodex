<?xml version="1.0" encoding="UTF-8"?>
<ruleset>
  <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
  <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
  <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
  <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
  <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
  <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
  <rule ref="Generic.Commenting.Todo"/>
  <rule ref="Generic.Commenting.Fixme"/>
  <rule ref="Generic.ControlStructures.InlineControlStructure"/>
  <rule ref="Generic.Files.ByteOrderMark"/>
  <rule ref="Generic.Files.LineEndings"/>
  <rule ref="Generic.Files.LineLength">
    <properties>
      <property name="absoluteLineLimit" value="80"/>
    </properties>
  </rule>
  <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
  <rule ref="Generic.Formatting.MultipleStatementAlignment"/>
  <rule ref="Generic.Formatting.NoSpaceAfterCast"/>
  <rule ref="Generic.Functions.CallTimePassByReference"/>
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
  <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie"/>
  <rule ref="Generic.Metrics.CyclomaticComplexity">
    <properties>
      <property name="complexity" value="5"/>
      <property name="absoluteComplexity" value="8"/>
    </properties>
  </rule>
  <rule ref="Generic.Metrics.NestingLevel">
    <properties>
      <property name="nestingLevel" value="3"/>
      <property name="absoluteNestingLevel" value="5"/>
    </properties>
  </rule>
  <rule ref="Generic.NamingConventions.ConstructorName"/>
  <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
  <rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>
  <rule ref="Generic.PHP.DeprecatedFunctions"/>
  <rule ref="Generic.PHP.DisallowShortOpenTag"/>
  <rule ref="Generic.PHP.DisallowShortOpenTag.EchoFound">
    <severity>0</severity>
  </rule>
  <rule ref="Generic.PHP.ForbiddenFunctions"/>
  <rule ref="Generic.PHP.NoSilencedErrors"/>
  <rule ref="Generic.PHP.UpperCaseConstant"/>
  <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
  <rule ref="Generic.WhiteSpace.ScopeIndent">
    <properties>
      <property name="indent" value="2"/>
    </properties>
  </rule>
  <rule ref="MySource.PHP.EvalObjectFactory"/>
  <rule ref="MySource.PHP.GetRequestData"/>
  <rule ref="PEAR.Commenting.ClassComment"/>
  <rule ref="PEAR.Commenting.ClassComment.MissingAuthorTag">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.MissingCategoryTag">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.MissingLicenseTag">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.MissingLinkTag">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.MissingPackageTag">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment"/>
  <rule ref="PEAR.Commenting.FileComment.MissingCategoryTag">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.MissingLinkTag">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.MissingPackageTag">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Commenting.FileComment.MissingVersion">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment"/>
  <rule ref="PEAR.Commenting.FunctionComment.MissingReturn">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingAfterParamName">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingAfterParamType">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Commenting.InlineComment"/>
  <rule ref="PEAR.ControlStructures.ControlSignature"/>
  <rule ref="PEAR.Files.IncludingFile"/>
  <rule ref="PEAR.Functions.FunctionCallSignature">
    <properties>
      <property name="indent" value="2"/>
    </properties>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.Indent">
    <severity>0</severity>
  </rule>
  <rule ref="PEAR.Functions.ValidDefaultValue"/>
  <rule ref="PEAR.NamingConventions.ValidClassName"/>
  <rule ref="PEAR.NamingConventions.ValidFunctionName"/>
  <rule ref="PEAR.NamingConventions.ValidVariableName"/>
  <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent">
    <properties>
      <property name="indent" value="2"/>
    </properties>
  </rule>
  <rule ref="PEAR.WhiteSpace.ScopeClosingBrace">
    <properties>
      <property name="indent" value="2"/>
    </properties>
  </rule>
  <rule ref="PSR1.Classes.ClassDeclaration"/>
  <rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace">
    <severity>0</severity>
  </rule>
  <rule ref="PSR1.Files.SideEffects"/>
  <rule ref="PSR2.Classes.ClassDeclaration"/>
  <rule ref="PSR2.Classes.ClassDeclaration.OpenBraceNewLine">
    <severity>0</severity>
  </rule>
  <rule ref="PSR2.Classes.PropertyDeclaration"/>
  <rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>
  <rule ref="PSR2.ControlStructures.SwitchDeclaration">
    <properties>
      <property name="indent" value="2"/>
    </properties>
  </rule>
  <rule ref="PSR2.Files.EndFileNewline"/>
  <rule ref="PSR2.Methods.MethodDeclaration"/>
  <rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
  <rule ref="PSR2.Namespaces.UseDeclaration"/>
  <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>
  <rule ref="Squiz.PHP.DiscouragedFunctions"/>
  <rule ref="Squiz.PHP.Eval"/>
  <rule ref="Squiz.PHP.GlobalKeyword"/>
  <rule ref="Squiz.PHP.Heredoc"/>
  <rule ref="Squiz.PHP.InnerFunctions"/>
  <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
  <rule ref="Squiz.PHP.NonExecutableCode"/>
  <rule ref="Squiz.Scope.MemberVarScope"/>
  <rule ref="Squiz.Scope.MethodScope"/>
  <rule ref="Squiz.Scope.StaticThisUsage"/>
  <rule ref="Squiz.WhiteSpace.CastSpacing"/>
  <rule ref="Squiz.WhiteSpace.ControlStructureSpacing"/>
  <rule ref="Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
  <rule ref="Squiz.WhiteSpace.MemberVarSpacing"/>
  <rule ref="Squiz.WhiteSpace.MemberVarSpacing.FirstIncorrect">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
  <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
  <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>
  <rule ref="Zend.Files.ClosingTag"/>
  <rule ref="Zend.NamingConventions.ValidVariableName"/>
  <rule ref="Zend.NamingConventions.ValidVariableName.PrivateNoUnderscore">
    <severity>0</severity>
  </rule>
  <!-- <config name="ParanoiaMode" value="1"/>
  <rule ref="Security.BadFunctions.Asserts"/>
  <rule ref="Security.BadFunctions.Backticks"/>
  <rule ref="Security.BadFunctions.CallbackFunctions"/>
  <rule ref="Security.BadFunctions.CryptoFunctions"/>
  <rule ref="Security.BadFunctions.EasyRFI"/>
  <rule ref="Security.BadFunctions.EasyXSS"/>
  <rule ref="Security.BadFunctions.ErrorHandling"/>
  <rule ref="Security.BadFunctions.FilesystemFunctions"/>
  <rule ref="Security.BadFunctions.FringeFunctions"/>
  <rule ref="Security.BadFunctions.FunctionHandlingFunctions"/>
  <rule ref="Security.BadFunctions.Mysqli"/>
  <rule ref="Security.BadFunctions.NoEvals"/>
  <rule ref="Security.BadFunctions.Phpinfos"/>
  <rule ref="Security.BadFunctions.PregReplace"/>
  <rule ref="Security.BadFunctions.SQLFunctions"/>
  <rule ref="Security.BadFunctions.SystemExecFunctions"/>
  <rule ref="Security.CVE.20132110"/>
  <rule ref="Security.CVE.20134113"/>
  <rule ref="Security.Misc.BadCorsHeader"/>
  <rule ref="Security.Misc.IncludeMismatch"/> -->
</ruleset>
